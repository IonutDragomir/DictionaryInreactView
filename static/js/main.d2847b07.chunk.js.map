{"version":3,"sources":["content/sideBox.js","content/buttons.js","content.js","index.js"],"names":["SideBox","props","className","onClick","document","getElementById","innerHTML","style","width","id","message","AddButton","word","value","setErrorMessage","x","dictionary","length","console","log","setDictionary","insertWords","SearchButton","i","searchWord","Content","useState","errorMessage","type","placeholder","color","fontWeight","map","element","RootFunction","reactDom","render"],"mappings":"sLAAO,SAASA,EAAQC,GACtB,OACE,sBAAKC,UAAU,UAAf,UACE,mBAAGA,UAAU,aAAb,sBACA,wBACEC,QAAS,WACPC,SAASC,eAAe,gBAAgBC,UAAxC,KAEFC,MAAO,CAAEC,MAAO,QAChBC,GAAG,oBALL,mBASA,qBAAKA,GAAG,eAAR,SAAwBR,EAAMS,a,WCb7B,SAASC,EAAUV,GAcxB,OACE,wBAAQC,UAAU,eAAeC,QAAS,kBAd5C,WACE,IAAIS,EAAOR,SAASC,eAAe,QAAQQ,MAC3C,IAAKD,GAAiB,MAATA,EACX,OAAOX,EAAMa,gBAAgB,0BAE/B,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAMe,WAAWC,SAAUF,EAE7C,GADAG,QAAQC,IAAIlB,EAAMe,YACdf,EAAMe,WAAWD,KAAOH,EAC1B,OAAOX,EAAMa,gBAAgB,yCAGjCb,EAAMmB,cAAN,sBAAwBnB,EAAMe,YAA9B,CAA0CJ,KAGMS,IAAhD,sBAMG,SAASC,EAAarB,GAgB3B,OACE,wBAAQC,UAAU,eAAeC,QAAS,kBAhB5C,WACE,IAAIS,EAAOR,SAASC,eAAe,QAAQQ,MACX,IAA5BZ,EAAMe,WAAWC,QACnBhB,EAAMa,gBAAgB,4BAExB,IAAK,IAAIS,EAAI,EAAGA,EAAItB,EAAMe,WAAWC,SAAUM,EACzCX,IAASX,EAAMe,WAAWO,GAC5BtB,EAAMa,gBAAN,oBAAmCF,EAAnC,uBACkB,KAATA,EACTX,EAAMa,gBAAgB,8BAEtBb,EAAMa,gBAAgB,kCAKsBU,IAAhD,yBC/BG,SAASC,IACd,MAAoCC,mBAAS,IAA7C,mBAAOV,EAAP,KAAmBI,EAAnB,KACA,EAAwCM,mBAAS,OAAjD,mBAAOC,EAAP,KAAqBb,EAArB,KAEA,OACE,sBAAKZ,UAAU,UAAf,UACE,qBAAKA,UAAU,WACf,cAACF,EAAD,CAASU,QAASiB,IAClB,sBAAKzB,UAAU,iBAAf,UACE,oBAAIA,UAAU,QAAd,wBACA,uBACEA,UAAU,cACVO,GAAG,OACHmB,KAAK,OACLC,YAAY,sBAEd,cAAClB,EAAD,CACES,cAAeA,EACfN,gBAAiBA,EACjBE,WAAYA,IAEd,cAACM,EAAD,CACEF,cAAeA,EACfN,gBAAiBA,EACjBE,WAAYA,EACZW,aAAcA,IAEhB,sBAAKzB,UAAU,aAAf,UACE,mBAAGK,MAAO,CAAEuB,MAAO,UAAWC,WAAY,KAA1C,qBACA,qBAAKtB,GAAG,iBAAiBF,MAAO,CAAEuB,MAAO,WAAzC,SACGd,EAAWgB,KAAI,SAACC,GAAD,MAAa,IAAMA,gBC9B/C,SAASC,IACP,OAAS,mCACL,cAACT,EAAD,MAMNU,IAASC,OAAO,cAACF,EAAD,IAAkB9B,SAASC,eAAe,W","file":"static/js/main.d2847b07.chunk.js","sourcesContent":["export function SideBox(props) {\r\n  return (\r\n    <div className=\"SideBox\">\r\n      <p className=\"errorTitle\">Message:</p>\r\n      <button\r\n        onClick={() => {\r\n          document.getElementById(\"errorMessage\").innerHTML = ` `;\r\n        }}\r\n        style={{ width: \"60px\" }}\r\n        id=\"clearMessageError\"\r\n      >\r\n        Clear\r\n      </button>\r\n      <div id=\"errorMessage\">{props.message}</div>\r\n    </div>\r\n  );\r\n}\r\n","export function AddButton(props) {\r\n  function insertWords() {\r\n    let word = document.getElementById(\"text\").value;\r\n    if (!word || word === \" \") {\r\n      return props.setErrorMessage(\"Empty space was added.\");\r\n    }\r\n    for (let x = 0; x < props.dictionary.length; ++x) {\r\n      console.log(props.dictionary);\r\n      if (props.dictionary[x] === word) {\r\n        return props.setErrorMessage(\"The word already exist in dictionary.\");\r\n      }\r\n    }\r\n    props.setDictionary([...props.dictionary, word]);\r\n  }\r\n  return (\r\n    <button className=\"insertButton\" onClick={() => insertWords()}>\r\n      Add Word\r\n    </button>\r\n  );\r\n}\r\n\r\nexport function SearchButton(props) {\r\n  function searchWord() {\r\n    let word = document.getElementById(\"text\").value;\r\n    if (props.dictionary.length === 0) {\r\n      props.setErrorMessage(\"The dictionary is empty.\");\r\n    }\r\n    for (let i = 0; i < props.dictionary.length; ++i) {\r\n      if (word === props.dictionary[i]) {\r\n        props.setErrorMessage(`The word: ${word} is in dictionary.`);\r\n      } else if (word === \"\") {\r\n        props.setErrorMessage(\"You need to insert a word.\");\r\n      } else {\r\n        props.setErrorMessage(\"The word is not in dictionary.\");\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <button className=\"insertButton\" onClick={() => searchWord()}>\r\n      Search Word\r\n    </button>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { SideBox } from \"./content/sideBox\";\r\nimport { AddButton } from \"./content/buttons\";\r\nimport { SearchButton } from \"./content/buttons\";\r\n\r\nlet book = [];\r\n\r\nexport function Content() {\r\n  const [dictionary, setDictionary] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState(\"Hi!\");\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n      <div className=\"header\"></div>\r\n      <SideBox message={errorMessage} />\r\n      <div className=\"InnerContainer\">\r\n        <h1 className=\"Title\">Dictionary</h1>\r\n        <input\r\n          className=\"insertWords\"\r\n          id=\"text\"\r\n          type=\"text\"\r\n          placeholder=\"add/search word..\"\r\n        />\r\n        <AddButton\r\n          setDictionary={setDictionary}\r\n          setErrorMessage={setErrorMessage}\r\n          dictionary={dictionary}\r\n        />\r\n        <SearchButton\r\n          setDictionary={setDictionary}\r\n          setErrorMessage={setErrorMessage}\r\n          dictionary={dictionary}\r\n          errorMessage={errorMessage}\r\n        />\r\n        <div className=\"Dictionary\">\r\n          <p style={{ color: \"#125f9b\", fontWeight: 600 }}> Words:</p>\r\n          <div id=\"ShowDictionary\" style={{ color: \"#125f9b\" }}>\r\n            {dictionary.map((element) => \" \" + element)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport reactDom from \"react-dom\";\nimport \"./index.css\";\nimport {Content} from \"./content\";\n\n\n\nfunction RootFunction() {\n  return ( <>\n      <Content />\n      </>\n  );\n}\n\n\nreactDom.render(<RootFunction />, document.getElementById(\"root\"));\n"],"sourceRoot":""}